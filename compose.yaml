# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  server:
    build:
      context: .
      target: final
    env_file:
      - path: ./.env
        required: true # default
      - path: ./override.env
        required: false # optional
    environment: 
      - APP_ENV=${APP_ENV}
      - PORT=${PORT}
      - DB_URL=${DB_URL}
      - DB_NAME=${DB_NAME}
      - REDIS_DB_HOST=redis
      - REDIS_DB_PORT=${REDIS_DB_PORT}
      - REDIS_DB_PASSWORD=${REDIS_DB_PASSWORD}
      - REDIS_DB_DATABASE=${REDIS_DB_DATABASE}
      - ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}
      - REFRESH_TOKEN_KEY=${REFRESH_TOKEN_KEY}
      - FIREBASE_JSON_STRING=${FIREBASE_JSON_STRING}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
    ports:
      - 5000:${PORT}

  redis:
    image: redis:alpine
    command:
      - '--port ${REDIS_DB_PORT}' 
      - '--requirepass ${REDIS_DB_PASSWORD}'
    ports:
      - '${REDIS_DB_PORT}:${REDIS_DB_PORT}'

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

